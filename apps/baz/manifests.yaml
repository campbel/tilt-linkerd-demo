---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: baz
  namespace: default
---
apiVersion: v1
kind: Service
metadata:
  name: baz
  annotations:
    balancer.linkerd.io/failure-accrual: consecutive
    balancer.linkerd.io/failure-accrual-consecutive-min-penalty: 5s
    balancer.linkerd.io/failure-accrual-consecutive-max-penalty: 10s
  labels:
    app: baz
spec:
  selector:
    app: baz
  ports:
    - port: 80
      targetPort: http-toxic
      name: http
      protocol: TCP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: baz
  labels:
    app: baz
spec:
  replicas: 3
  selector:
    matchLabels:
      app: baz
  template:
    metadata:
      labels:
        app: baz
    spec:
      serviceAccountName: baz
      containers:
        - name: toxic
          image: toxic:latest
          ports:
            - containerPort: 8000
              name: http-toxic
          volumeMounts:
            - name: baz-toxic-config
              mountPath: /config/toxic.json
              subPath: toxic.json
        - name: baz
          image: baz:latest
          ports:
            - containerPort: 8080
              name: http
      volumes:
        - name: baz-toxic-config
          configMap:
            name: baz-toxic-config
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: baz
  namespace: default
  annotations:
    nginx.ingress.kubernetes.io/upstream-vhost: "baz"
spec:
  ingressClassName: nginx
  rules:
    - host: baz.localhost
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: baz
                port:
                  number: 80
---
apiVersion: policy.linkerd.io/v1beta2
kind: HTTPRoute
metadata:
  name: baz-root-route
  namespace: default
  annotations:
    retry.linkerd.io/http: "5xx"
    retry.linkerd.io/limit: "2"
    retry.linkerd.io/timeout: 1s
spec:
  parentRefs:
    - name: baz
      kind: Server
      group: policy.linkerd.io
  rules:
    - matches:
        - path:
            type: PathPrefix
            value: "/"
---
apiVersion: policy.linkerd.io/v1beta2
kind: HTTPRoute
metadata:
  name: baz-foo-bar-route
  namespace: default
  annotations:
    retry.linkerd.io/http: "5xx"
    retry.linkerd.io/limit: "2"
    retry.linkerd.io/timeout: 1s
spec:
  parentRefs:
    - name: baz
      kind: Server
      group: policy.linkerd.io
  rules:
    - matches:
        - path:
            type: PathPrefix
            value: "/foo/bar"
---
apiVersion: policy.linkerd.io/v1beta1
kind: Server
metadata:
  name: baz
  namespace: default
spec:
  podSelector:
    matchLabels:
      app: baz
  port: http-toxic
  proxyProtocol: HTTP/2
  accessPolicy: deny # deny all traffic by default
---
apiVersion: policy.linkerd.io/v1beta1
kind: ServerAuthorization
metadata:
  namespace: default
  name: baz-from-foo
spec:
  server:
    name: baz
  client:
    meshTLS:
      identities:
        - "foo.default.serviceaccount.identity.linkerd.cluster.local"
        - "ingress-nginx.ingress-nginx.identity.linkerd.cluster.local"
---
apiVersion: policy.linkerd.io/v1alpha1
kind: AuthorizationPolicy
metadata:
  name: baz-foo-bar-policy
  namespace: default
spec:
  targetRef:
    group: policy.linkerd.io
    kind: HTTPRoute
    name: baz-foo-bar-route
  requiredAuthenticationRefs:
    - name: baz-bar-authn
      kind: MeshTLSAuthentication
      group: policy.linkerd.io
---
apiVersion: policy.linkerd.io/v1alpha1
kind: MeshTLSAuthentication
metadata:
  name: baz-bar-authn
  namespace: default
spec:
  identities:
    - "bar.default.serviceaccount.identity.linkerd.cluster.local"
